pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
    }
    
    environment {
        SCANNER_HOME =tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git changelog: false, credentialsId: 'git_cred', poll: false, url: 'https://github.com/gouthamc125/DevOps-Projects.git'
            }
        }
        
        stage('Navigate to Directory') {
            steps {
                dir('DevOps-Project-24/DotNet-monitoring') {
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                dir('DevOps-Project-24/DotNet-monitoring') {
                    withSonarQubeEnv('sonar') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Monitoring-app -Dsonar.projectKey=Monitoring-app'''
                    }
                }
            }
        }
        
        stage("quality gate") {
            steps {
                script {
                    dir('DevOps-Project-24/DotNet-monitoring') {
                        waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                    }    
                } 
            }
        }
        stage("TRIVY File scan") {
            steps {
                dir('DevOps-Project-24/DotNet-monitoring') {
                    sh "trivy fs . > trivy-fs_report.txt"
                }
            }
        }
        
        stage("OWASP Dependency Check") {
            steps {
                dir('DevOps-Project-24/DotNet-monitoring') {
                    dependencyCheck additionalArguments: '--scan ./ --format XML ', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }            
            }
        }
        
        stage("Docker Build & Tag") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('DevOps-Project-24/DotNet-monitoring') {
                            sh "make image"
                        }
                    }
                }
            }
        }
        
        stage("TRIVY"){
            steps{
                dir('DevOps-Project-24/DotNet-monitoring') {
                    sh "trivy image gouthamc125/dotnet-monitoring:latest > trivy.txt" 
                }
            }
        }
        
        stage("Push Image to DockerHub") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('DevOps-Project-24/DotNet-monitoring') {
                            sh "make push"
                        }
                    }
                }
            }
        }
        stage("Deploy to Container") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker run -it -d --name monitoring -p 5000:5000 gouthamc125/dotnet-monitoring:latest"
                    }    
                }
            }
        }
    }
}
